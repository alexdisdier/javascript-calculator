{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","operatorsHandler","event","state","lastClicked","temp","currentDisplay","setState","currentValue","currentSign","target","value","computingDisplay","hasSign","numbersHandler","length","currentValueCheckZero","computingDisplayCheckZero","previousValue","decimalHandler","lastValue","includes","percentageHandler","negativePositiveHandler","negativePositive","isNegative","Math","sign","parseFloat","currentdisplay","console","log","abs","computeHandler","opsRegex","computeArray","split","result","compute","map","n","index","isNaN","match","resetHandler","decimal","bind","assertThisInitialized","react_default","a","createElement","className","id","onClick","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0ececd2.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.scss';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      currentValue: '', \n      previousValue: '0',  \n      currentSign: '',\n      lastClicked: '',\n      computingDisplay: '',\n      currentDisplay: '0',\n      hasSign: false,\n      decimal: false\n    }\n\n    this.operatorsHandler = this.operatorsHandler.bind(this);\n    this.numbersHandler = this.numbersHandler.bind(this);\n    this.decimalHandler = this.decimalHandler.bind(this);\n    this.percentageHandler = this.percentageHandler.bind(this);\n    this.negativePositiveHandler = this.negativePositiveHandler.bind(this);\n    this.computeHandler = this.computeHandler.bind(this);\n    this.resetHandler = this.resetHandler.bind(this);\n  }\n\n  // My methods \n  // In case there are errors, I should display the message on calculator. \n\n  operatorsHandler = (event) => {\n    if (this.state.lastClicked === ' = '){\n      const temp = this.state.currentDisplay // result of computation\n      this.setState({\n        currentValue: temp,\n        currentSign: event.target.value,\n        lastClicked: event.target.value,\n        currentDisplay: event.target.value,\n        computingDisplay: temp + event.target.value,\n        hasSign: true\n      })\n    } else {\n      this.setState({\n        currentSign: event.target.value,\n        lastClicked: event.target.value,\n        currentDisplay: event.target.value,\n        computingDisplay: this.state.computingDisplay + event.target.value,\n        hasSign: true\n      })\n    }\n  }\n\n  numbersHandler = (event) => {\n    if (this.state.currentValue.length > 12 ){\n      return ;\n    }\n    // const opsRegex = /\\+|-|\\*|\\//gm; \n\n    // formula: e.target.value != '0' ? e.target.value : '',\n\n    // const notZero = /[1-9]/gm; \n    // if (this.state.currentDisplay.match(notZero) === null){\n    //   console.log('[1-9]');\n    // }\n\n    const currentValueCheckZero = this.state.currentValue + event.target.value !== '0' ? this.state.currentValue + event.target.value : '';\n\n    const computingDisplayCheckZero = this.state.computingDisplay + event.target.value !== '0' ? this.state.computingDisplay + event.target.value : '';\n  \n    this.setState ({\n      hasSign: false\n    })\n\n    if (this.state.lastClicked === ' = '){ // end of computation\n      this.setState({\n        currentValue: currentValueCheckZero,\n        currentSign: '',\n        lastClicked: event.target.value,\n        computingDisplay: event.target.value !== '0' ? event.target.value : '',\n        currentDisplay: this.state.currentValue + event.target.value\n      })\n    }\n    else if (!this.state.hasSign){ // start of computation\n      this.setState({\n        currentValue: currentValueCheckZero,\n        lastClicked: event.target.value !== '0' ? event.target.value : '',\n        currentDisplay: this.state.currentValue + event.target.value,\n        computingDisplay: computingDisplayCheckZero\n      })\n    }\n    else if (this.state.hasSign){\n      this.setState({\n        previousValue: this.state.currentValue,\n        currentValue: event.target.value,\n        lastClicked: event.target.value,\n        currentDisplay: event.target.value,\n        computingDisplay: this.state.computingDisplay + event.target.value\n      })\n    } else {\n      this.setState({\n        previousValue: this.state.currentValue,\n        currentValue: event.target.value,\n        lastClicked: event.target.value,\n        currentDisplay: event.target.value,\n        computingDisplay: this.state.computingDisplay + event.target.value\n      })\n    }\n  }\n\n  decimalHandler = (event) => {\n    // should add the decimal lastclicked if it is number, otherwise it creates automatically 0,\n    const lastValue = this.state.currentValue;\n    if (this.state.currentValue.includes('.')){\n      // console.log('has decimal already');\n      return;\n    }\n\n    else if (this.state.hasSign || this.state.computingDisplay === '') {\n      this.setState({\n        currentValue: '0' + event.target.value,\n        previousValue: lastValue,\n        currentDisplay: '0' + event.target.value,\n        computingDisplay: this.state.computingDisplay + '0' + event.target.value,\n        hasSign: false\n      })\n    } else {\n      this.setState({\n        currentValue: lastValue + event.target.value,\n        currentDisplay: lastValue + event.target.value,\n        computingDisplay: this.state.computingDisplay + event.target.value\n      })\n    }\n  }\n\n  percentageHandler = (event) => {\n    // console.log(event.target.value);\n    this.setState({\n      currentValue: event.target.value,\n      currentDisplay: event.target.value\n    })\n  }\n\n  negativePositiveHandler = (event) => {\n    // console.log(event.target.value);\n    const negativePositive = -this.state.currentValue;\n\n    const isNegative = Math.sign(parseFloat(this.state.currentValue)) === 1;\n\n    if (this.state.currentSign === \" + \" && isNegative) {\n      this.setState({\n        currentValue: negativePositive,\n        currentDisplay: negativePositive,\n        currentSign: ' + ',\n        computingDisplay: this.state.previousValue + ' - ' + this.state.currentValue\n      })\n\n    } else if (this.state.currentSign === \" - \" || !isNegative) {\n      this.setState({\n        currentValue: negativePositive,\n        currentDisplay: negativePositive,\n        computingDisplay: this.state.previousValue + ' + ' + Math.abs(parseFloat(this.state.currentValue))\n      })\n\n    } \n    \n    else if (this.state.currentSign) {\n      this.setState({\n        currentValue: negativePositive,\n        currentDisplay: negativePositive,\n        computingDisplay: this.state.previousValue + this.state.currentSign + negativePositive\n      })\n\n    } \n    \n    else if (this.state.lastClicked === ' = '){\n      const currentValue = this.state.currentdisplay;\n      // const negativePositive = -this.state.currentValue;\n      console.log(currentValue);\n      this.setState({\n        currentValue: '-' + currentValue,\n        currentDisplay: '-' + currentValue,\n        computingDisplay: '-' + currentValue,\n      })\n    }\n    \n    else {\n      this.setState({\n        currentValue: negativePositive,\n        currentDisplay: negativePositive,\n        computingDisplay: negativePositive\n      })\n    }\n  }\n\n  computeHandler = (event) => {\n    // Operators regex\n    const opsRegex = /\\+|-|\\*|\\//gm; \n  \n    //test\n      const computeArray = this.state.computingDisplay.split(' ')\n      ;\n      // computeArray.push(computeArray[computeArray.length-2]);\n      console.log(computeArray);\n      let compute = parseFloat(computeArray[0]);\n\n      computeArray.map((n, index) => {\n        if (!isNaN(n)){\n          if (computeArray[index+1] === '+'){\n            compute += parseFloat(n);\n          } \n          else if (computeArray[index+1] === '-'){\n            compute -= parseFloat(n);\n          } \n          else if (computeArray[index+1] === '*'){\n            compute *= parseFloat(n);\n          }\n          else if (computeArray[index+1] === '/'){\n            compute /= parseFloat(n);\n          }\n        } \n        return compute;\n      });\n      console.log(compute);\n    //end test\n    \n    if (this.state.computingDisplay.match(opsRegex) === null || this.state.lastClicked === ' = '){\n      return;\n    }\n\n    if (this.state.currentValue === '' && this.state.currentSign.match(opsRegex) !== null){\n      return;\n    }\n    \n    // For multiple equation, check for more than one sign, if so keep the result from before and use the next sign to calculate.\n\n    let result;\n\n    if (this.state.lastClicked === ' = '){\n\n      result = parseFloat(this.state.previousValue) + parseFloat(this.state.currentValue);\n    }\n\n    if (this.state.currentSign === ' + '){\n      result = parseFloat(this.state.previousValue) + parseFloat(this.state.currentValue);\n\n    } else if (this.state.currentSign === ' - '){\n      result = parseFloat(this.state.previousValue) - parseFloat(this.state.currentValue);\n\n    } else if (this.state.currentSign === ' * '){\n      result = parseFloat(this.state.previousValue) * parseFloat(this.state.currentValue);\n\n    } else if (this.state.currentSign === ' / '){\n      result = parseFloat(this.state.previousValue) / parseFloat(this.state.currentValue);\n    }\n\n    this.setState({\n      currentValue: '',\n      currentDisplay: result,\n      currentSign: '',\n      previousValue: this.state.currentValue,\n      lastClicked: event.target.value,\n      computingDisplay: this.state.computingDisplay + ' = ' + result \n    })\n  }\n\n  resetHandler = () => {\n    this.setState({\n      currentValue: '',\n      previousValue: '0',\n      currentSign: '',\n      lastClicked: 'AC',\n      computingDisplay: '',\n      currentDisplay: '0'\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"calculator\">\n          <div id=\"display-flex\">\n            <span id=\"output\">{this.state.computingDisplay}</span>\n            <span id=\"display\">{this.state.currentDisplay}</span>\n          </div>\n            \n          <div id=\"pad\">\n            <button id=\"clear\" className=\"dark\" onClick={this.resetHandler}>AC</button>\n            <button id=\"plus-negative\" value=\"+/-\" className=\"dark\" onClick={this.negativePositiveHandler}>+/-</button>\n            <button id=\"percentage\" value=\"%\" className=\"dark\" onClick={this.percentageHandler}>%</button>\n            <button id=\"divide\" value=\" / \" onClick={this.operatorsHandler}>/</button>\n            <button id=\"seven\" value=\"7\" className=\"number\" onClick={this.numbersHandler}>7</button>\n            <button id=\"eight\" value=\"8\" className=\"number\" onClick={this.numbersHandler}>8</button>\n            <button id=\"nine\" value=\"9\" className=\"number\" onClick={this.numbersHandler}>9</button>\n            <button id=\"multiply\" value=\" * \" onClick={this.operatorsHandler}>x</button>\n            <button id=\"four\" value=\"4\" className=\"number\" onClick={this.numbersHandler}>4</button> \n            <button id=\"five\" value=\"5\" className=\"number\" onClick={this.numbersHandler}>5</button>\n            <button id=\"six\" value=\"6\" className=\"number\" onClick={this.numbersHandler}>6</button>\n            <button id=\"subtract\" value=\" - \" onClick={this.operatorsHandler}>-</button>\n            <button id=\"one\" value=\"1\" className=\"number\" onClick={this.numbersHandler}>1</button>\n            <button id=\"two\" value=\"2\" className=\"number\" onClick={this.numbersHandler}>2</button>\n            <button id=\"three\" value=\"3\" className=\"number\" onClick={this.numbersHandler}>3</button>\n            <button id=\"add\" value=\" + \" onClick={this.operatorsHandler}>+</button>\n            <button id=\"zero\" value=\"0\" className=\"number\" onClick={this.numbersHandler}>0</button>\n            <button id=\"decimal\" value=\".\" className=\"number\" onClick={this.decimalHandler}>.</button>\n            <button id=\"equals\" value=\" = \" onClick={this.computeHandler}>=</button>\n          </div>\n\n        </div>\n        {/* <span id=\"author\">Designed and Coded by <a href=\"https://alexdisdier.fr\" target=\"_blank\" rel=\"noopener noreferrer\">Alex Disdier</a></span> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}