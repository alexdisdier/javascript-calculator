{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","operatorsHandler","event","setState","currentSign","target","value","lastClicked","currentDisplay","numbersHandler","previousValue","state","currentValue","decimalHandler","percentageHandler","negativePositiveHandler","negativePositive","computeHandler","result","parseFloat","resetHandler","computingDisplay","bind","assertThisInitialized","react_default","a","createElement","className","id","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb07e4ab.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.scss';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      currentValue: '0',\n      previousValue: '0',\n      currentSign: '',\n      lastClicked: '',\n      computingDisplay: '',\n      currentDisplay: '0'\n    }\n\n    this.operatorsHandler = this.operatorsHandler.bind(this);\n    this.numbersHandler = this.numbersHandler.bind(this);\n    this.decimalHandler = this.decimalHandler.bind(this);\n    this.percentageHandler = this.percentageHandler.bind(this);\n    this.negativePositiveHandler = this.negativePositiveHandler.bind(this);\n    this.computeHandler = this.computeHandler.bind(this);\n    this.resetHandler = this.resetHandler.bind(this);\n  }\n\n  operatorsHandler = (event) => {\n    this.setState({\n      currentSign: event.target.value,\n      lastClicked: event.target.value,\n      currentDisplay: event.target.value\n    })\n  }\n\n  numbersHandler = (event) => {\n    // console.log(event.target.value);\n    this.setState({\n      previousValue: this.state.currentValue,\n      currentValue: event.target.value,\n      lastClicked: event.target.value,\n      currentDisplay: event.target.value\n    })\n  }\n\n  decimalHandler = (event) => {\n    // console.log(event.target.value);\n    this.setState({\n      currentValue: event.target.value,\n      currentDisplay: event.target.value\n    })\n  }\n\n  percentageHandler = (event) => {\n    // console.log(event.target.value);\n    this.setState({\n      currentValue: event.target.value,\n      currentDisplay: event.target.value\n    })\n  }\n\n  negativePositiveHandler = (event) => {\n    // console.log(event.target.value);\n    const negativePositive = -this.state.currentValue;\n    this.setState({\n      currentValue: negativePositive,\n      currentDisplay: negativePositive\n    })\n  }\n\n  computeHandler = () => {\n    let result;\n\n    if (this.state.currentSign === '+'){\n      result = parseFloat(this.state.previousValue) + parseFloat(this.state.currentValue);\n\n    } else if (this.state.currentSign === '-'){\n      result = parseFloat(this.state.previousValue) - parseFloat(this.state.currentValue);\n\n    } else if (this.state.currentSign === '*'){\n      result = parseFloat(this.state.previousValue) * parseFloat(this.state.currentValue);\n\n    } else if (this.state.currentSign === '/'){\n      result = parseFloat(this.state.previousValue) / parseFloat(this.state.currentValue);\n    }\n\n    this.setState({\n      currentValue: result,\n      currentDisplay: result\n    })\n  }\n\n  resetHandler = () => {\n    this.setState({\n      currentValue: '0',\n      previousValue: '0',\n      currentSign: '',\n      lastClicked: 'AC',\n      computingDisplay: '',\n      currentDisplay: '0'\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"calculator\">\n          <div id=\"display-flex\">\n            <span id=\"output\">{this.state.computingDisplay}</span>\n            <span id=\"display\">{this.state.currentDisplay}</span>\n          </div>\n            \n          <div id=\"pad\">\n            <button id=\"clear\" className=\"dark\" onClick={this.resetHandler}>AC</button>\n            <button id=\"plus-negative\" value=\"+/-\" className=\"dark\" onClick={this.negativePositiveHandler}>+/-</button>\n            <button id=\"percentage\" value=\"%\" className=\"dark\" onClick={this.percentageHandler}>%</button>\n            <button id=\"divide\" value=\"/\" onClick={this.operatorsHandler}>/</button>\n            <button id=\"seven\" value=\"7\" className=\"number\" onClick={this.numbersHandler}>7</button>\n            <button id=\"eight\" value=\"8\" className=\"number\" onClick={this.numbersHandler}>8</button>\n            <button id=\"nine\" value=\"9\" className=\"number\" onClick={this.numbersHandler}>9</button>\n            <button id=\"multiply\" value=\"*\" onClick={this.operatorsHandler}>x</button>\n            <button id=\"four\" value=\"4\" className=\"number\" onClick={this.numbersHandler}>4</button> \n            <button id=\"five\" value=\"5\" className=\"number\" onClick={this.numbersHandler}>5</button>\n            <button id=\"six\" value=\"6\" className=\"number\" onClick={this.numbersHandler}>6</button>\n            <button id=\"subtract\" value=\"-\" onClick={this.operatorsHandler}>-</button>\n            <button id=\"one\" value=\"1\" className=\"number\" onClick={this.numbersHandler}>1</button>\n            <button id=\"two\" value=\"2\" className=\"number\" onClick={this.numbersHandler}>2</button>\n            <button id=\"three\" value=\"3\" className=\"number\" onClick={this.numbersHandler}>3</button>\n            <button id=\"add\" value=\"+\" onClick={this.operatorsHandler}>+</button>\n            <button id=\"zero\" value=\"0\" className=\"number\" onClick={this.numbersHandler}>0</button>\n            <button id=\"decimal\" value=\".\" className=\"number\" onClick={this.decimalHandler}>.</button>\n            <button id=\"equals\" onClick={this.computeHandler}>=</button>\n          </div>\n\n        </div>\n        {/* <span id=\"author\">Designed and Coded by <a href=\"https://alexdisdier.fr\" target=\"_blank\" rel=\"noopener noreferrer\">Alex Disdier</a></span> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}