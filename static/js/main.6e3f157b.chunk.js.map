{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","operatorsHandler","event","setState","currentSign","target","value","lastClicked","currentDisplay","computingDisplay","state","hasSign","numbersHandler","currentValue","previousValue","decimalHandler","percentageHandler","negativePositiveHandler","negativePositive","computeHandler","result","computeArray","split","console","log","parseFloat","resetHandler","bind","assertThisInitialized","react_default","a","createElement","className","id","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gOA6LeA,qBAxLb,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAuBRQ,iBAAmB,SAACC,GAClBR,EAAKS,SAAS,CACZC,YAAaF,EAAMG,OAAOC,MAC1BC,YAAaL,EAAMG,OAAOC,MAC1BE,eAAgBN,EAAMG,OAAOC,MAC7BG,iBAAkBf,EAAKgB,MAAMD,iBAAmBP,EAAMG,OAAOC,MAC7DK,SAAS,KA9BKjB,EAkClBkB,eAAiB,SAACV,GAGhBR,EAAKS,SAAU,CACbQ,SAAS,IAGoB,QAA3BjB,EAAKgB,MAAMH,YACbb,EAAKS,SAAS,CACZU,aAAcX,EAAMG,OAAOC,MAC3BF,YAAa,GACbG,YAAaL,EAAMG,OAAOC,MAC1BG,iBAAkBP,EAAMG,OAAOC,MAC/BE,eAAgBN,EAAMG,OAAOC,QAGvBZ,EAAKgB,MAAMC,SAQZjB,EAAKgB,MAAMC,QAClBjB,EAAKS,SAAS,CACZW,cAAepB,EAAKgB,MAAMG,aAC1BA,aAAcX,EAAMG,OAAOC,MAC3BC,YAAaL,EAAMG,OAAOC,MAC1BE,eAAgBN,EAAMG,OAAOC,MAC7BG,iBAAkBf,EAAKgB,MAAMD,iBAAmBP,EAAMG,OAAOC,SAb/DZ,EAAKS,SAAS,CACZU,aAAcnB,EAAKgB,MAAMG,aAAeX,EAAMG,OAAOC,MACrDC,YAAaL,EAAMG,OAAOC,MAC1BE,eAAgBd,EAAKgB,MAAMG,aAAeX,EAAMG,OAAOC,MACvDG,iBAAkBf,EAAKgB,MAAMD,iBAAmBP,EAAMG,OAAOC,SAvDjDZ,EA6ElBqB,eAAiB,SAACb,GAEhBR,EAAKS,SAAS,CACZU,aAAcX,EAAMG,OAAOC,MAC3BE,eAAgBN,EAAMG,OAAOC,SAjFfZ,EAqFlBsB,kBAAoB,SAACd,GAEnBR,EAAKS,SAAS,CACZU,aAAcX,EAAMG,OAAOC,MAC3BE,eAAgBN,EAAMG,OAAOC,SAzFfZ,EA6FlBuB,wBAA0B,SAACf,GAEzB,IAAMgB,GAAoBxB,EAAKgB,MAAMG,aACrCnB,EAAKS,SAAS,CACZU,aAAcK,EACdV,eAAgBU,KAlGFxB,EAsGlByB,eAAiB,SAACjB,GAId,IAIEkB,EAJIC,EAAe3B,EAAKgB,MAAMD,iBAAiBa,MAAM,KACvDC,QAAQC,IAAIH,GAKiB,QAA3B3B,EAAKgB,MAAMN,YACbgB,EAASK,WAAW/B,EAAKgB,MAAMI,eAAiBW,WAAW/B,EAAKgB,MAAMG,cAElC,QAA3BnB,EAAKgB,MAAMN,YACpBgB,EAASK,WAAW/B,EAAKgB,MAAMI,eAAiBW,WAAW/B,EAAKgB,MAAMG,cAElC,QAA3BnB,EAAKgB,MAAMN,YACpBgB,EAASK,WAAW/B,EAAKgB,MAAMI,eAAiBW,WAAW/B,EAAKgB,MAAMG,cAElC,QAA3BnB,EAAKgB,MAAMN,cACpBgB,EAASK,WAAW/B,EAAKgB,MAAMI,eAAiBW,WAAW/B,EAAKgB,MAAMG,eAGxEnB,EAAKS,SAAS,CACZU,aAAc,GACdL,eAAgBY,EAChBhB,YAAa,GACbU,cAAepB,EAAKgB,MAAMG,aAC1BN,YAAaL,EAAMG,OAAOC,MAC1BG,iBAAkBf,EAAKgB,MAAMD,iBAAmB,MAAQW,KAnI1C1B,EAuIlBgC,aAAe,WACbhC,EAAKS,SAAS,CACZU,aAAc,GACdC,cAAe,IACfV,YAAa,GACbG,YAAa,KACbE,iBAAkB,GAClBD,eAAgB,OA5IlBd,EAAKgB,MAAQ,CACXG,aAAc,GACdC,cAAe,IACfV,YAAa,GACbG,YAAa,GACbE,iBAAkB,GAClBD,eAAgB,IAChBG,SAAS,GAGXjB,EAAKO,iBAAmBP,EAAKO,iBAAiB0B,KAAtBhC,OAAAiC,EAAA,EAAAjC,QAAAiC,EAAA,EAAAjC,CAAAD,KACxBA,EAAKkB,eAAiBlB,EAAKkB,eAAee,KAApBhC,OAAAiC,EAAA,EAAAjC,QAAAiC,EAAA,EAAAjC,CAAAD,KACtBA,EAAKqB,eAAiBrB,EAAKqB,eAAeY,KAApBhC,OAAAiC,EAAA,EAAAjC,QAAAiC,EAAA,EAAAjC,CAAAD,KACtBA,EAAKsB,kBAAoBtB,EAAKsB,kBAAkBW,KAAvBhC,OAAAiC,EAAA,EAAAjC,QAAAiC,EAAA,EAAAjC,CAAAD,KACzBA,EAAKuB,wBAA0BvB,EAAKuB,wBAAwBU,KAA7BhC,OAAAiC,EAAA,EAAAjC,QAAAiC,EAAA,EAAAjC,CAAAD,KAC/BA,EAAKyB,eAAiBzB,EAAKyB,eAAeQ,KAApBhC,OAAAiC,EAAA,EAAAjC,QAAAiC,EAAA,EAAAjC,CAAAD,KACtBA,EAAKgC,aAAehC,EAAKgC,aAAaC,KAAlBhC,OAAAiC,EAAA,EAAAjC,QAAAiC,EAAA,EAAAjC,CAAAD,KAlBJA,wEAmJhB,OACEmC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,cACNJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,gBACNJ,EAAAC,EAAAC,cAAA,QAAME,GAAG,UAAUpC,KAAKa,MAAMD,kBAC9BoB,EAAAC,EAAAC,cAAA,QAAME,GAAG,WAAWpC,KAAKa,MAAMF,iBAGjCqB,EAAAC,EAAAC,cAAA,OAAKE,GAAG,OACNJ,EAAAC,EAAAC,cAAA,UAAQE,GAAG,QAAQD,UAAU,OAAOE,QAASrC,KAAK6B,cAAlD,MACAG,EAAAC,EAAAC,cAAA,UAAQE,GAAG,gBAAgB3B,MAAM,MAAM0B,UAAU,OAAOE,QAASrC,KAAKoB,yBAAtE,OACAY,EAAAC,EAAAC,cAAA,UAAQE,GAAG,aAAa3B,MAAM,IAAI0B,UAAU,OAAOE,QAASrC,KAAKmB,mBAAjE,KACAa,EAAAC,EAAAC,cAAA,UAAQE,GAAG,SAAS3B,MAAM,MAAM4B,QAASrC,KAAKI,kBAA9C,KACA4B,EAAAC,EAAAC,cAAA,UAAQE,GAAG,QAAQ3B,MAAM,IAAI0B,UAAU,SAASE,QAASrC,KAAKe,gBAA9D,KACAiB,EAAAC,EAAAC,cAAA,UAAQE,GAAG,QAAQ3B,MAAM,IAAI0B,UAAU,SAASE,QAASrC,KAAKe,gBAA9D,KACAiB,EAAAC,EAAAC,cAAA,UAAQE,GAAG,OAAO3B,MAAM,IAAI0B,UAAU,SAASE,QAASrC,KAAKe,gBAA7D,KACAiB,EAAAC,EAAAC,cAAA,UAAQE,GAAG,WAAW3B,MAAM,MAAM4B,QAASrC,KAAKI,kBAAhD,KACA4B,EAAAC,EAAAC,cAAA,UAAQE,GAAG,OAAO3B,MAAM,IAAI0B,UAAU,SAASE,QAASrC,KAAKe,gBAA7D,KACAiB,EAAAC,EAAAC,cAAA,UAAQE,GAAG,OAAO3B,MAAM,IAAI0B,UAAU,SAASE,QAASrC,KAAKe,gBAA7D,KACAiB,EAAAC,EAAAC,cAAA,UAAQE,GAAG,MAAM3B,MAAM,IAAI0B,UAAU,SAASE,QAASrC,KAAKe,gBAA5D,KACAiB,EAAAC,EAAAC,cAAA,UAAQE,GAAG,WAAW3B,MAAM,MAAM4B,QAASrC,KAAKI,kBAAhD,KACA4B,EAAAC,EAAAC,cAAA,UAAQE,GAAG,MAAM3B,MAAM,IAAI0B,UAAU,SAASE,QAASrC,KAAKe,gBAA5D,KACAiB,EAAAC,EAAAC,cAAA,UAAQE,GAAG,MAAM3B,MAAM,IAAI0B,UAAU,SAASE,QAASrC,KAAKe,gBAA5D,KACAiB,EAAAC,EAAAC,cAAA,UAAQE,GAAG,QAAQ3B,MAAM,IAAI0B,UAAU,SAASE,QAASrC,KAAKe,gBAA9D,KACAiB,EAAAC,EAAAC,cAAA,UAAQE,GAAG,MAAM3B,MAAM,MAAM4B,QAASrC,KAAKI,kBAA3C,KACA4B,EAAAC,EAAAC,cAAA,UAAQE,GAAG,OAAO3B,MAAM,IAAI0B,UAAU,SAASE,QAASrC,KAAKe,gBAA7D,KACAiB,EAAAC,EAAAC,cAAA,UAAQE,GAAG,UAAU3B,MAAM,IAAI0B,UAAU,SAASE,QAASrC,KAAKkB,gBAAhE,KACAc,EAAAC,EAAAC,cAAA,UAAQE,GAAG,SAAS3B,MAAM,MAAM4B,QAASrC,KAAKsB,gBAA9C,eA/KMgB,cCQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOb,EAAAC,EAAAC,cAACY,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6e3f157b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.scss';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      currentValue: '', \n      previousValue: '0',  \n      currentSign: '',\n      lastClicked: '',\n      computingDisplay: '',\n      currentDisplay: '0',\n      hasSign: false\n    }\n\n    this.operatorsHandler = this.operatorsHandler.bind(this);\n    this.numbersHandler = this.numbersHandler.bind(this);\n    this.decimalHandler = this.decimalHandler.bind(this);\n    this.percentageHandler = this.percentageHandler.bind(this);\n    this.negativePositiveHandler = this.negativePositiveHandler.bind(this);\n    this.computeHandler = this.computeHandler.bind(this);\n    this.resetHandler = this.resetHandler.bind(this);\n  }\n\n  // My methods \n  // In case there are errors, I should display the message on calculator. \n\n  operatorsHandler = (event) => {\n    this.setState({\n      currentSign: event.target.value,\n      lastClicked: event.target.value,\n      currentDisplay: event.target.value,\n      computingDisplay: this.state.computingDisplay + event.target.value,\n      hasSign: true\n    })\n  }\n\n  numbersHandler = (event) => {\n    const opsRegex = /\\+|-|\\*|\\//gm; // Operators regex\n    // if (this.state.lastClicked.search(opsRegex) === -1 ) {}\n    this.setState ({\n      hasSign: false\n    })\n\n    if (this.state.lastClicked === ' = '){ // end of computation\n      this.setState({\n        currentValue: event.target.value,\n        currentSign: '',\n        lastClicked: event.target.value,\n        computingDisplay: event.target.value,\n        currentDisplay: event.target.value\n      })\n    }\n    else if (!this.state.hasSign){ // start of computation\n      this.setState({\n        currentValue: this.state.currentValue + event.target.value,\n        lastClicked: event.target.value,\n        currentDisplay: this.state.currentValue + event.target.value,\n        computingDisplay: this.state.computingDisplay + event.target.value\n      })\n    }\n    else if (this.state.hasSign){\n      this.setState({\n        previousValue: this.state.currentValue,\n        currentValue: event.target.value,\n        lastClicked: event.target.value,\n        currentDisplay: event.target.value,\n        computingDisplay: this.state.computingDisplay + event.target.value\n      })\n    } else {\n      this.setState({\n        previousValue: this.state.currentValue,\n        currentValue: event.target.value,\n        lastClicked: event.target.value,\n        currentDisplay: event.target.value,\n        computingDisplay: this.state.computingDisplay + event.target.value\n      })\n    }\n  }\n\n  decimalHandler = (event) => {\n    // should add the decimal lastclicked if it is number, otherwise it creates automatically 0,\n    this.setState({\n      currentValue: event.target.value,\n      currentDisplay: event.target.value\n    })\n  }\n\n  percentageHandler = (event) => {\n    // console.log(event.target.value);\n    this.setState({\n      currentValue: event.target.value,\n      currentDisplay: event.target.value\n    })\n  }\n\n  negativePositiveHandler = (event) => {\n    // console.log(event.target.value);\n    const negativePositive = -this.state.currentValue;\n    this.setState({\n      currentValue: negativePositive,\n      currentDisplay: negativePositive\n    })\n  }\n\n  computeHandler = (event) => {\n    // Operators regex\n    // const opsRegex = /\\+|-|\\*|\\//gm; \n    //test\n      const computeArray = this.state.computingDisplay.split(' ');\n      console.log(computeArray);\n    //end test\n\n    let result;\n\n    if (this.state.currentSign === ' + '){\n      result = parseFloat(this.state.previousValue) + parseFloat(this.state.currentValue);\n\n    } else if (this.state.currentSign === ' - '){\n      result = parseFloat(this.state.previousValue) - parseFloat(this.state.currentValue);\n\n    } else if (this.state.currentSign === ' * '){\n      result = parseFloat(this.state.previousValue) * parseFloat(this.state.currentValue);\n\n    } else if (this.state.currentSign === ' / '){\n      result = parseFloat(this.state.previousValue) / parseFloat(this.state.currentValue);\n    }\n\n    this.setState({\n      currentValue: '',\n      currentDisplay: result,\n      currentSign: '',\n      previousValue: this.state.currentValue,\n      lastClicked: event.target.value,\n      computingDisplay: this.state.computingDisplay + ' = ' + result\n    })\n  }\n\n  resetHandler = () => {\n    this.setState({\n      currentValue: '',\n      previousValue: '0',\n      currentSign: '',\n      lastClicked: 'AC',\n      computingDisplay: '',\n      currentDisplay: '0'\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"calculator\">\n          <div id=\"display-flex\">\n            <span id=\"output\">{this.state.computingDisplay}</span>\n            <span id=\"display\">{this.state.currentDisplay}</span>\n          </div>\n            \n          <div id=\"pad\">\n            <button id=\"clear\" className=\"dark\" onClick={this.resetHandler}>AC</button>\n            <button id=\"plus-negative\" value=\"+/-\" className=\"dark\" onClick={this.negativePositiveHandler}>+/-</button>\n            <button id=\"percentage\" value=\"%\" className=\"dark\" onClick={this.percentageHandler}>%</button>\n            <button id=\"divide\" value=\" / \" onClick={this.operatorsHandler}>/</button>\n            <button id=\"seven\" value=\"7\" className=\"number\" onClick={this.numbersHandler}>7</button>\n            <button id=\"eight\" value=\"8\" className=\"number\" onClick={this.numbersHandler}>8</button>\n            <button id=\"nine\" value=\"9\" className=\"number\" onClick={this.numbersHandler}>9</button>\n            <button id=\"multiply\" value=\" * \" onClick={this.operatorsHandler}>x</button>\n            <button id=\"four\" value=\"4\" className=\"number\" onClick={this.numbersHandler}>4</button> \n            <button id=\"five\" value=\"5\" className=\"number\" onClick={this.numbersHandler}>5</button>\n            <button id=\"six\" value=\"6\" className=\"number\" onClick={this.numbersHandler}>6</button>\n            <button id=\"subtract\" value=\" - \" onClick={this.operatorsHandler}>-</button>\n            <button id=\"one\" value=\"1\" className=\"number\" onClick={this.numbersHandler}>1</button>\n            <button id=\"two\" value=\"2\" className=\"number\" onClick={this.numbersHandler}>2</button>\n            <button id=\"three\" value=\"3\" className=\"number\" onClick={this.numbersHandler}>3</button>\n            <button id=\"add\" value=\" + \" onClick={this.operatorsHandler}>+</button>\n            <button id=\"zero\" value=\"0\" className=\"number\" onClick={this.numbersHandler}>0</button>\n            <button id=\"decimal\" value=\".\" className=\"number\" onClick={this.decimalHandler}>.</button>\n            <button id=\"equals\" value=\" = \" onClick={this.computeHandler}>=</button>\n          </div>\n\n        </div>\n        {/* <span id=\"author\">Designed and Coded by <a href=\"https://alexdisdier.fr\" target=\"_blank\" rel=\"noopener noreferrer\">Alex Disdier</a></span> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}