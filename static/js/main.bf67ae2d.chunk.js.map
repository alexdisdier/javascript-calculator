{"version":3,"sources":["serviceWorker.js","index.js","App.js","Utils/Utils.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","props","_this","Object","_Users_alexandredisdier_Documents_web_development_100daysOfCode_R1_front_end_libraries_javascript_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_alexandredisdier_Documents_web_development_100daysOfCode_R1_front_end_libraries_javascript_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_alexandredisdier_Documents_web_development_100daysOfCode_R1_front_end_libraries_javascript_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","operatorsHandler","event","state","lastClicked","setState","signOver","temp","currentDisplay","currentValue","currentSign","target","value","computingDisplay","hasSign","numbersHandler","length","currentValueCheckZero","computingDisplayCheckZero","previousValue","decimalHandler","lastValue","includes","percentageHandler","parseFloat","negativePositiveHandler","negativePositive","isNegative","Math","sign","currentdisplay","abs","computeHandler","result","eval","numberIsDecimal","toFixed","resetHandler","decimal","percentClicked","bind","_Users_alexandredisdier_Documents_web_development_100daysOfCode_R1_front_end_libraries_javascript_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","styleOuput","fontSize","styleDisplay","react__WEBPACK_IMPORTED_MODULE_6___default","className","id","style","onClick","Component","__webpack_require__","d","__webpack_exports__","n","floor"],"mappings":"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","file":"static/js/main.bf67ae2d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\n\nimport { numberIsDecimal } from './Utils/Utils';\n\nimport './App.scss';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      currentValue: '', \n      previousValue: '0',  \n      currentSign: '',\n      lastClicked: '',\n      computingDisplay: '',\n      currentDisplay: '0',\n      hasSign: false,\n      decimal: false,\n      signOver: false,\n      percentClicked: false\n      // keyCode: [\n      //   {\n      //     id: 1,\n      //     keyPushed: '0',\n      //     keyCode: 48\n      //   },\n      //   {\n      //     id: 2,\n      //     keyPushed: '1',\n      //     keyCode: 49\n      //   },\n      //   {\n      //     id: 3,\n      //     keyPushed: '2',\n      //     keyCode: 50\n      //   },\n      //   {\n      //     id: 4,\n      //     keyPushed: '3',\n      //     keyCode: 51\n      //   },\n      //   {\n      //     id: 5,\n      //     keyPushed: '4',\n      //     keyCode: 52\n      //   },\n      //   {\n      //     id: 6,\n      //     keyPushed: '5',\n      //     keyCode: 53\n      //   },\n      //   {\n      //     id: 7,\n      //     keyPushed: '6',\n      //     keyCode: 54\n      //   },\n      //   {\n      //     id: 8,\n      //     keyPushed: '7',\n      //     keyCode: 55\n      //   },\n      //   {\n      //     id: 9,\n      //     keyPushed: '8',\n      //     keyCode: 56\n      //   },\n      //   {\n      //     id: 10,\n      //     keyPushed: '9',\n      //     keyCode: 57\n      //   },\n      //   {\n      //     id: 11,\n      //     keyPushed: '+',\n      //     keyCode: 187\n      //   },\n      //   {\n      //     id: 12,\n      //     keyPushed: '-',\n      //     keyCode: 189\n      //   },\n      //   {\n      //     id: 13,\n      //     keyPushed: '*',\n      //     keyCode: 56\n      //   },\n      //   {\n      //     id: 14,\n      //     keyPushed: '/',\n      //     keyCode: 191\n      //   },\n      //   {\n      //     id: 15,\n      //     keyPushed: '=',\n      //     keyCode: 187\n      //   }\n      // ]\n    }\n\n    this.operatorsHandler = this.operatorsHandler.bind(this);\n    this.numbersHandler = this.numbersHandler.bind(this);\n    this.decimalHandler = this.decimalHandler.bind(this);\n    this.percentageHandler = this.percentageHandler.bind(this);\n    this.negativePositiveHandler = this.negativePositiveHandler.bind(this);\n    this.computeHandler = this.computeHandler.bind(this);\n    this.resetHandler = this.resetHandler.bind(this);\n    // this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  operatorsHandler = (event) => {\n    const opsRegex = /\\+|-|\\*|\\//gm; \n    if (this.state.lastClicked.match(opsRegex) !== null){\n      this.setState({ signOver: true})\n    };\n    if (this.state.lastClicked === ' = '){\n      const temp = this.state.currentDisplay // result of computation\n      this.setState({\n        currentValue: temp,\n        currentSign: event.target.value,\n        lastClicked: event.target.value,\n        currentDisplay: event.target.value,\n        computingDisplay: temp + event.target.value,\n        hasSign: true\n      })\n    } else {\n      this.setState({\n        currentSign: event.target.value,\n        lastClicked: event.target.value,\n        currentDisplay: event.target.value,\n        computingDisplay: this.state.computingDisplay + event.target.value,\n        hasSign: true\n      })\n    }\n  }\n\n  numbersHandler = (event) => {\n    if (this.state.currentValue.length > 12 && this.state.currentSign === ''){\n      return;\n    }\n\n    const currentValueCheckZero = this.state.currentValue + event.target.value !== '0' ? this.state.currentValue + event.target.value : '';\n\n    const computingDisplayCheckZero = this.state.computingDisplay + event.target.value !== '0' ? this.state.computingDisplay + event.target.value : '';\n  \n    this.setState ({\n      hasSign: false\n    })\n\n    if (this.state.lastClicked === ' = '){ // end of computation\n      this.setState({\n        currentValue: currentValueCheckZero,\n        currentSign: '',\n        lastClicked: event.target.value,\n        computingDisplay: event.target.value !== '0' ? event.target.value : '',\n        currentDisplay: this.state.currentValue + event.target.value\n      })\n    }\n    else if (!this.state.hasSign){ // start of computation\n      this.setState({\n        currentValue: currentValueCheckZero,\n        lastClicked: event.target.value !== '0' ? event.target.value : '',\n        currentDisplay: this.state.currentValue + event.target.value,\n        computingDisplay: computingDisplayCheckZero\n      })\n    }\n    else if (this.state.hasSign){\n      this.setState({\n        previousValue: this.state.currentValue,\n        currentValue: event.target.value,\n        lastClicked: event.target.value,\n        currentDisplay: event.target.value,\n        computingDisplay: this.state.computingDisplay + event.target.value\n      })\n    } else {\n      this.setState({\n        previousValue: this.state.currentValue,\n        currentValue: event.target.value,\n        lastClicked: event.target.value,\n        currentDisplay: event.target.value,\n        computingDisplay: this.state.computingDisplay + event.target.value\n      })\n    }\n  }\n\n  decimalHandler = (event) => {\n    const lastValue = this.state.currentValue;\n    if (this.state.currentValue.includes('.')){\n      return;\n    }\n\n    else if (this.state.hasSign || this.state.computingDisplay === '') {\n      this.setState({\n        currentValue: '0' + event.target.value,\n        previousValue: lastValue,\n        currentDisplay: '0' + event.target.value,\n        computingDisplay: this.state.computingDisplay + '0' + event.target.value,\n        hasSign: false\n      })\n    } else {\n      this.setState({\n        currentValue: lastValue + event.target.value,\n        currentDisplay: lastValue + event.target.value,\n        computingDisplay: this.state.computingDisplay + event.target.value\n      })\n    }\n  }\n\n  percentageHandler = (event) => {\n    if (this.state.currentSign === ''){\n      this.setState({\n        currentValue: parseFloat(this.state.currentValue / 100),\n        currentDisplay: parseFloat(this.state.currentValue / 100),\n        computingDisplay: parseFloat(this.state.currentValue / 100)\n      })\n    } else {\n      this.setState({\n        currentValue: parseFloat(this.state.currentValue / 100),\n        currentDisplay: parseFloat(this.state.currentValue / 100),\n        computingDisplay: this.state.previousValue + this.state.currentSign + this.state.previousValue + '*' + parseFloat(this.state.currentValue / 100)\n      })\n    }\n  }\n\n  negativePositiveHandler = (event) => {\n    const negativePositive = -this.state.currentValue;\n\n    const isNegative = Math.sign(parseFloat(this.state.currentValue)) === 1;\n\n    if (this.state.currentSign === \" + \" && isNegative) {\n      this.setState({\n        currentValue: negativePositive,\n        currentDisplay: negativePositive,\n        currentSign: ' + ',\n        computingDisplay: this.state.previousValue + ' - ' + this.state.currentValue\n      })\n\n    } else if (this.state.currentSign === \" - \" || !isNegative) {\n      this.setState({\n        currentValue: negativePositive,\n        currentDisplay: negativePositive,\n        computingDisplay: this.state.previousValue + ' + ' + Math.abs(parseFloat(this.state.currentValue))\n      })\n\n    } \n    \n    else if (this.state.currentSign) {\n      this.setState({\n        currentValue: negativePositive,\n        currentDisplay: negativePositive,\n        computingDisplay: this.state.previousValue + this.state.currentSign + negativePositive\n      })\n\n    } \n    \n    else if (this.state.lastClicked === ' = '){\n      const currentValue = this.state.currentdisplay;\n      this.setState({\n        currentValue: '-' + currentValue,\n        currentDisplay: '-' + currentValue,\n        computingDisplay: '-' + currentValue,\n      })\n    }\n    \n    else {\n      this.setState({\n        currentValue: negativePositive,\n        currentDisplay: negativePositive,\n        computingDisplay: negativePositive\n      })\n    }\n  }\n\n  // componentDidMount() {\n  //   document.addEventListener('keydown', this.handleKeyPress);\n  // }\n\n  // componentWillUnmount() {\n  //   document.removeEventListener('keydown', this.handleKeyPress);\n  // }\n\n  // handleKeyPress(e) {\n  //   if (e.keyCode === this.props.keyCode) {\n  //     this.playSoundHandler();\n  //   }\n  // }\n\n  computeHandler = (event) => {\n    // const opsRegex = /\\+|-|\\*|\\//gm; \n    let result = parseFloat(eval(this.state.previousValue + this.state.currentSign + this.state.currentValue));\n\n    if (this.state.currentValue === ''){\n      return;\n    }\n\n    if (numberIsDecimal(result)){\n      result = parseFloat(result.toFixed(10)); // toFixed() allows us to round up at 10 digits. (number).toFixed(10)\n    }\n\n    if (this.state.signOver){\n      this.setState({\n        currentValue: '',\n        currentDisplay: result,\n        currentSign: '',\n        previousValue: this.state.currentValue,\n        lastClicked: event.target.value,\n        computingDisplay: this.state.computingDisplay + ' = ' + result,\n        signOver: false\n      })\n    } else {\n      this.setState({\n        currentValue: '',\n        currentDisplay: result,\n        currentSign: '',\n        previousValue: this.state.currentValue,\n        lastClicked: event.target.value,\n        computingDisplay: this.state.computingDisplay + ' = ' + result,\n        signOver: false\n      })\n    }\n  }\n\n  resetHandler = () => {\n    this.setState({\n      currentValue: '',\n      previousValue: '0',\n      currentSign: '',\n      lastClicked: 'AC',\n      computingDisplay: '',\n      currentDisplay: '0',\n      signOver: false\n    })\n  }\n\n  render() {\n    const styleOuput = {\n      fontSize: ''\n    };\n\n    const styleDisplay = {\n      fontSize: ''\n    };\n\n    if (this.state.computingDisplay.length >= 30 ){\n      styleOuput.fontSize = '10px';\n      styleDisplay.fontSize = '20px';\n    }\n\n    return (\n      <div className=\"App\">\n        <div id=\"calculator\">\n          <div id=\"display-flex\">\n            <span id=\"output\" style={styleOuput}>{this.state.computingDisplay}</span>\n            <span id=\"display\" style={styleDisplay}>{this.state.currentDisplay}</span>\n          </div>\n            \n          <div id=\"pad\">\n            <button id=\"clear\" className=\"dark\" \n            onClick={this.resetHandler}>AC</button>\n            <button id=\"plus-negative\" value=\"+/-\" className=\"dark\" onClick={this.negativePositiveHandler}>+/-</button>\n            <button id=\"percentage\" value=\"%\" className=\"dark\" onClick={this.percentageHandler}>%</button>\n            <button id=\"divide\" value=\" / \" onClick={this.operatorsHandler}>/</button>\n            <button id=\"seven\" value=\"7\" className=\"number\" onClick={this.numbersHandler}>7</button>\n            <button id=\"eight\" value=\"8\" className=\"number\" onClick={this.numbersHandler}>8</button>\n            <button id=\"nine\" value=\"9\" className=\"number\" onClick={this.numbersHandler}>9</button>\n            <button id=\"multiply\" value=\" * \" onClick={this.operatorsHandler}>x</button>\n            <button id=\"four\" value=\"4\" className=\"number\" onClick={this.numbersHandler}>4</button> \n            <button id=\"five\" value=\"5\" className=\"number\" onClick={this.numbersHandler}>5</button>\n            <button id=\"six\" value=\"6\" className=\"number\" onClick={this.numbersHandler}>6</button>\n            <button id=\"subtract\" value=\" - \" onClick={this.operatorsHandler}>-</button>\n            <button id=\"one\" value=\"1\" className=\"number\" onClick={this.numbersHandler}>1</button>\n            <button id=\"two\" value=\"2\" className=\"number\" onClick={this.numbersHandler}>2</button>\n            <button id=\"three\" value=\"3\" className=\"number\" onClick={this.numbersHandler}>3</button>\n            <button id=\"add\" value=\" + \" onClick={this.operatorsHandler}>+</button>\n            <button id=\"zero\" value=\"0\" className=\"number\" onClick={this.numbersHandler}>0</button>\n            <button id=\"decimal\" value=\".\" className=\"number\" onClick={this.decimalHandler}>.</button>\n            <button id=\"equals\" value=\" = \" onClick={this.computeHandler}>=</button>\n          </div>\n\n        </div>\n        {/* <span id=\"author\">Designed and Coded by <a href=\"https://alexdisdier.fr\" target=\"_blank\" rel=\"noopener noreferrer\">Alex Disdier</a></span> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// function testFunction () {\n//   alert(\"testFunction works\");\n// }\n\nexport const numberIsDecimal = (n) => {\n  var result = (n - Math.floor(n)) !== 0; \n   \n  if (result)\n    return true;\n   else\n     return false;\n}\n"],"sourceRoot":""}